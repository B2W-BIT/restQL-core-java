Query =
   WS (UseBlock WS LS WS)? QueryBlock;

UseBlock =
  UseRule (WS LS WS UseRule)*;

UseRule =
  KW_USE WS_MAND UseRuleKey WS EQUALS_SIGN WS UseRuleValue;

UseRuleKey =
  Identifier;

UseRuleValue =
  Primitive;

QueryBlock =
  QueryItem (WS LS WS QueryItem)*;

QueryItem =
  WS FromRule (WS_MAND HeaderRule)?  (WS_MAND TimeoutRule)?  (WS_MAND WithRule)? (WS_MAND WithBodyRule)?  (WS_MAND (OnlyRule | HideRule))? (WS_MAND FlagsRule)? WS;


<FromRule> =
  KW_FROM WS FromResource (WS_MAND KW_AS WS_MAND ResultAlias)?;

FromResource =
  Identifier;

ResultAlias =
  Identifier;

TimeoutRule =
  KW_TIMEOUT WS_MAND TimeoutRuleValue;

TimeoutRuleValue =
  Integer;

HeaderRule =
  KW_HEADERS WS_MAND HeaderRuleItem (WS LS WS HeaderRuleItem)*;

HeaderRuleItem =
  HeaderName WS EQUALS_SIGN WS HeaderValue;

HeaderName =
  (Digit | Letter | "-" | "_")+;

HeaderValue =
  LiteralHeaderValue | Variable;

LiteralHeaderValue =
  String;

WithRule =
  KW_WITH WS_MAND WithRuleItem (WS LS WS WithRuleItem)*;

WithRuleItem =
  WithParamName WS EQUALS_SIGN WS WithParamValue;

WithParamName =
  QueryParameterName;

WithParamValue =
  WithParamValueData WithParamValueModifierList;

WithParamValueData =
  (WithParamPrimitiveValue | Chaining | ListParamValue | ComplexParamValue | Variable);

WithParamValueModifierList =
  (WS MOD_OPERATOR WS WithParamModifier)*;

WithParamPrimitiveValue =
  Primitive;

WithBodyRule =
  KW_WITH_BODY WS_MAND WithRuleItem (WS LS WS WithRuleItem)*;

ListParamValue =
  BEGIN_LIST WS END_LIST |
  BEGIN_LIST WS WithParamValue ( WS LS WS WithParamValue )* END_LIST;

ComplexParamValue =
  BEGIN_OBJ WS END_OBJ |
  BEGIN_OBJ WS ComplexParamItem ( WS OBJ_SEP WS ComplexParamItem)* WS END_OBJ;

ComplexParamItem =
  ComplexParamKey WS OBJ_PROP_SEP WS WithParamValue;

ComplexParamKey =
  Identifier | String;

Chaining =
  PathItem (CHAINING_OPERATOR PathItem)+;

Variable =
  <"$"> Identifier;

PathItem =
  Identifier;

<QueryParameterName> =
  (Letter | Digit | "_" | "-" | "." | "|")+;

WithParamModifier =
  WithModifierAlias | WithModifierFunction;

WithModifierAlias =
  Identifier;

WithModifierFunction =
  WithModifierFunctionName OPEN_PARAMS CLOSE_PARAMS |
  WithModifierFunctionName OPEN_PARAMS WithModifierFunctionArgList CLOSE_PARAMS;

WithModifierFunctionName =
  Identifier;

WithModifierFunctionArgList =
  WithModifierFunctionArg (WS ARGS_SEP WS WithModifierFunctionArg)*;

WithModifierFunctionArg =
  Primitive;

OnlyRule =
  KW_ONLY WS_MAND OnlyRuleItem (WS LS WS OnlyRuleItem)*;

OnlyRuleItem =
  OnlyRuleItemName OnlyRuleItemModifierList;

OnlyRuleItemName =
  OnlyRuleItemPath (CHAINING_OPERATOR OnlyRuleItemPath)*

OnlyRuleItemPath =
  Identifier | "*";

OnlyRuleItemModifierList =
  (WS MOD_OPERATOR WS OnlyRuleItemModifier)*;

OnlyRuleItemModifier =
  OnlyRuleItemModifierName WS OPEN_PARAMS WS CLOSE_PARAMS |
  OnlyRuleItemModifierName WS OPEN_PARAMS WS OnlyRuleItemModifierArgList WS CLOSE_PARAMS;

OnlyRuleItemModifierName =
  Identifier;

OnlyRuleItemModifierArgList =
  OnlyRuleItemModifierArg (WS ARGS_SEP WS OnlyRuleItemModifierArg)* | OnlyRuleItemModifierArgVar;

OnlyRuleItemModifierArg =
  Primitive;

OnlyRuleItemModifierArgVar =
  Variable;

HideRule =
  KW_HIDE;

FlagsRule =
  FlagRule (WS LS WS FlagRule)*;

FlagRule =
  IgnoreErrorsFlag;

IgnoreErrorsFlag =
  KW_IGNORE_ERRORS;

<KW_USE> =
  <"use">;

<KW_FROM> =
  <"from">;

<KW_AS> =
  <"as">;

<KW_HEADERS> =
  <"headers">;

<KW_TIMEOUT> =
  <"timeout">;

<KW_WITH> =
  <"with"|"params">;

<KW_WITH_BODY> =
  <"body">;

<KW_ONLY> =
  <"only">;

<KW_HIDE> =
  <"hidden">;

<KW_IGNORE_ERRORS> =
  <"ignore-errors">

<EQUALS_SIGN> =
  <"=">;

<CHAINING_OPERATOR> =
  <".">;

<MOD_OPERATOR> =
  <"->">;

<BEGIN_LIST> =
  <"[">;

<END_LIST> =
  <"]">;

<BEGIN_OBJ> =
  <"{">;

<END_OBJ> =
  <"}">;

<OBJ_SEP> =
  <",">;

<OBJ_PROP_SEP> =
  <":">;

<OPEN_PARAMS> =
  <"(">;

<CLOSE_PARAMS> =
  <")">;

<ARGS_SEP> =
  <",">;

<Identifier> =
  Letter (Digit | Letter | "-" | "_" | ".")*;

<Primitive> =
  String | Number | Boolean | Null;

<String> =
  Quote StringChar* Quote;

<Boolean> =
  True | False;

True =
  <"true">;

False =
  <"false">;

Null =
  <"null">;

<Number> =
  Integer | Float;


<Integer> =
 "-"? ("0" | #"[1-9]\d*");

<Float> =
  "-"? ( "0.0" | Integer "." Digit+ );

<StringChar> =
  Unescaped;

<Unescaped> =
  #"[^\x00-\x1F\x22\x5C]";

<Quote> =
  "\"";

<Digit> =
  #"\d";

<Letter> =
  #"\w";

<NL> =
  <"\n">;

(*List Separator*)
<LS> =
  NL | <","> | Comment;

(*White Space*)
<WS> =
  (SPACE | Comment)*;

<WS_MAND> =
  (SPACE | Comment | NL)+;

<SPACE> =
  <#"\s">;

<Comment> =
  BEGIN_COMMENT <CommentText> END_COMMENT;

<BEGIN_COMMENT> =
  < "//" >;

<END_COMMENT> =
  < #"\n" >;

<CommentChar> =
  #"[^\x00-\x1F\n]";

<CommentText> =
  CommentChar* ;

